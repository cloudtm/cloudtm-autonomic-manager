#include <stdio.h>

//#include "ROOT-Sim.h"

#include "events_wait_queue.h"

int get_queue_length(event_wait_queue *queue) {
	int i=0;
	if(queue->top) {
		wait_event *ev = queue->top;
		while(ev) {
			ev = ev->next;
			i++;
		}
	}
	return i;
}

void copy_into_wait_queue(int event_type, event_content_type *event_content, time_type now, event_wait_queue *queue) {

	wait_event *event;
	event_content_type *new_event_content = (event_content_type*)malloc(sizeof(event_content_type));

	if (new_event_content == NULL) {
		printf("---- Funzione copy_into_wait_queue: MALLOC FALLITA\n");
	}
	
  	memcpy(new_event_content,event_content,sizeof(event_content_type));

	event = (wait_event*)malloc(sizeof(wait_event));
	if (event == NULL) {
		printf("---- Funzione copy_into_wait_queue: MALLOC FALLITA\n");
	}
	
	event->event_type = event_type;	
	event->event_content = new_event_content;
	event->insertion_time = now;
	event->next = NULL;
	
	if (queue->bottom != NULL) {
        	queue->bottom->next=event;
	}

	queue->bottom=event;

	if(queue->top == NULL){
		queue->top=event;
	}
}

void get_from_wait_queue(int *event_type, event_content_type **event_content, event_wait_queue *queue) {
    if (queue->top != NULL) {
		*event_type=queue->top->event_type;	
		*event_content=queue->top->event_content;	
		wait_event *previous_top = queue->top;
		queue->top=queue->top->next;
		free(previous_top);
    	if (queue->top == NULL)
        	queue->bottom=NULL; 
	} else {
		*event_content=NULL;
		queue->top=NULL;
	} 
}

int is_empty(event_wait_queue *queue) {
	if (queue->top == NULL)
		return 1;
	return 0;		
}



